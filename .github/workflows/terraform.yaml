name: "Terraform"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    env:
      AWS_REGION: us-east-1
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.9
          terraform_wrapper: false

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # crear rol para olga y trabajar con ese rol
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check branch name
        id: branch-check
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Verify Changed Files
        id: verify-changed-files
        run: |
          changed_files=$(git diff --name-only ${{ env.branch }} HEAD)
          echo "Changed files: $changed_files"
          if echo "$changed_files" | grep -qE "lambdas/.+\.js$"; then
            echo "files_changed=true" >> $GITHUB_ENV
            changed_files=$(echo "$changed_files" | grep -E "lambdas/.+\.js$")
            echo "Changed JavaScript files: $changed_files"
            echo "changed_files=$changed_files" >> $GITHUB_ENV
          else
            echo "files_changed=false" >> $GITHUB_ENV
          fi

      # CAMBIAR EL .JS POR .GO

      - name: Zip Lambda
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          # Get the path of the modified file
          CHANGED_FILE=$(echo "${{ steps.verify-changed-files.outputs.changed_files }}" | head -n 1)
          # Get the directory of the modified file
          CHANGED_DIR=$(dirname "${CHANGED_FILE}")
          # Zip the directory of the modified file
          cd "${CHANGED_DIR}"
          zip -r "../${CHANGED_DIR}.zip" .
          cd ..

      # CAMBIAR LOS NOMBRES DE LOS BUCKETS DE S3
      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@v0.5.0
        with:
          args: --delete
          source_dir: ./
          bucket_url: s3://${{ steps.branch-check.outputs.branch == 'main' && 'olgaproduction' || steps.branch-check.outputs.branch == 'develop' && 'olgadevelop' || 'Invalid branch name' }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -no-color

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Plan Comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            </details>
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # modificar el apply para que aplique en develop o main
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
